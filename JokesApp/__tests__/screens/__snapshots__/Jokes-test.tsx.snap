// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Jokes /> renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
      "marginHorizontal": 5,
      "marginTop": 60,
      "paddingVertical": 40,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingHorizontal": 20,
      }
    }
  >
    <Text
      style={
        Object {
          "fontFamily": "Roboto-Medium",
          "fontSize": 18,
          "fontWeight": "500",
        }
      }
    >
      Saved: 
      0
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginLeft": 8,
        }
      }
    >
      <
        color="red"
        icon={
          Object {
            "icon": Array [
              512,
              512,
              Array [
                128153,
                128154,
                128155,
                128156,
                128420,
                129293,
                129294,
                129505,
                10084,
                61578,
                9829,
              ],
              "f004",
              "M0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84.02L256 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 .0003 232.4 .0003 190.9L0 190.9z",
            ],
            "iconName": "heart",
            "prefix": "fas",
          }
        }
        size={28}
      />
    </View>
  </View>
  <View
    style={
      Object {
        "marginTop": 15,
        "paddingHorizontal": 25,
      }
    }
  >
    <Text
      style={
        Object {
          "fontFamily": "Roboto-Bold",
          "fontSize": 36,
          "fontWeight": "700",
          "lineHeight": 45,
          "textAlign": "center",
        }
      }
    >
      Things you can say to annoy designers.
    </Text>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "marginTop": 40,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          null,
        ]
      }
    >
      <RCTScrollView
        collapsable={false}
        data={Array []}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onViewableItemsChanged={[Function]}
        pagingEnabled={true}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={64}
        showsHorizontalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        style={Object {}}
        testID="flatList"
        viewabilityConfig={
          Object {
            "itemVisiblePercentThreshold": 90,
            "minimumViewTime": 5,
            "waitForInteraction": true,
          }
        }
        viewabilityConfigCallbackPairs={
          Array [
            Object {
              "onViewableItemsChanged": [Function],
              "viewabilityConfig": Object {
                "itemVisiblePercentThreshold": 90,
                "minimumViewTime": 5,
                "waitForInteraction": true,
              },
            },
          ]
        }
      >
        <View />
      </RCTScrollView>
      <View
        collapsable={false}
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 10,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "black",
              "borderRadius": 8,
              "height": 5,
              "marginHorizontal": 8,
              "opacity": 1,
              "width": 50,
            }
          }
        />
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "black",
              "borderRadius": 8,
              "height": 5,
              "marginHorizontal": 8,
              "opacity": 0.3,
              "width": 50,
            }
          }
        />
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "black",
              "borderRadius": 8,
              "height": 5,
              "marginHorizontal": 8,
              "opacity": 0.3,
              "width": 50,
            }
          }
        />
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "black",
              "borderRadius": 8,
              "height": 5,
              "marginHorizontal": 8,
              "opacity": 0.3,
              "width": 50,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "marginTop": 40,
        "paddingHorizontal": 20,
      }
    }
  >
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={false}
      >
        <View
          style={
            Object {
              "backgroundColor": "#000000",
              "borderRadius": 8,
              "elevation": 5,
              "padding": 15,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Roboto-Regular",
                "fontSize": 18,
                "textAlign": "center",
              }
            }
          >
            Save
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
